#!/bin/bash

DESC='Update sps Fortran Namelists file'

toVersion=$(cat ${sps:-sps}/VERSION | cut -d/ -f2)
defaultDB=${sps:-sps}/share/sps_versions_components.txt
defaultFile=./sps.cfg

eval $(rpy.cclargparse \
   -D " " \
   ${0##*/} \
   "${DESC}" \
   "Example: ${0##*/} --from VERSION1 [--to VERSION2] [-v] [-b] [-i INFILENAME] [-o OUTFILENAME] [--config=CONFIG_FILE]" \
   "-v,--verbose" 'action=count'   "0"               "[verbose mode]" \
   "-i,--file"    'nargs=1'        "${defaultFile}"  "[Input Namelist filename]" \
   "-o,--outfile" 'nargs=1'        ""                "[Output Namelist filename - default: same as input]" \
   "-b,--backup"  'action=count'   "0"               "[Create a backup (.bkp) of the input FILE]" \
   "-f,--from"    'required=True, nargs=1'  ""       "[Version of the orginal file]" \
   "-d,--to"      'nargs=1'        "${toVersion}"    "[File will be updated to VERSION2]" \
   "-c,--config"  'nargs=*'        ""                "[Updater config file]" \
   "--debug"      'action=count'   "0"               "[Debug mode]" \
   ++++ $*)

myverbose=''
[[ ${verbose} -gt 0 ]] && myverbose='-v' || true
mydebug=''
[[ ${debug} -gt 0 ]] && mydebug='--debug' || true
myconfig=''
[[ "x${config}" != "x" ]] && myconfig="-c ${config}" || true
[[ "x${outfile}" == "x" ]] && outfile=${file} || true

if [[ ! -r ${file:-/dev/null} ]] ; then
   printf "ERROR: Cannot read input file: ${file:-/dev/null}\n" 1>&2
   exit 1
fi
if [[ ${backup} -gt 0 ]] ; then
   bkfile=$(mktemp ${file}-bkp-XXXXXX)
   cp ${file} ${bkfile}
   printf "Backup file: ${bkfile}\n"
fi

fromdynphy="$(grep "sps=${from};" ${defaultDB} | tr ';' ' ')"
todynphy="$(grep "sps=${to};" ${defaultDB} | tr ';' ' ')"

if [[ "x${fromdynphy}" == "x" ]] ; then
   printf "ERROR: cannot find info for fromVersion=${from} in ${defaultDB}\n" 1>&2
   exit 1
fi

if [[ "x${todynphy}" == "x" ]] ; then
   printf "ERROR: cannot find info for toVersion=${to} in ${defaultDB}\n" 1>&2
   exit 1
fi
fromdynphy=$(declare ${fromdynphy} && echo ${spsdyn}:${rpnphy})
fromdyn=${fromdynphy%:*}
fromphy=${fromdynphy#*:}

todynphy=$(declare ${todynphy} && echo ${spsdyn}:${rpnphy})
todyn=${todynphy%:*}
tophy=${todynphy#*:}

printf "WARNING: sps dyn related nml will NOT be updated\n" 1>&2

# [[ ${verbose} -gt 0 ]] && set -x || true
set -x

# spsdyn_nml_update ${myverbose} ${mydebug} -i ${file} -o ${outfile} -f ${fromdyn} -d ${todyn} ${myconfig}

rpnphy_nml_update ${myverbose} ${mydebug} -i ${file} -o ${outfile} -f ${fromphy} -d ${tophy} ${myconfig}
