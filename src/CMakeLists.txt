set(WITH_SYSTEM_RPN FALSE CACHE BOOL "Control whether to use installed RPN-SI libs")
message(STATUS "(EC) WITH_SYSTEM_RPN = ${WITH_SYSTEM_RPN}")

# Use installed RPN libraries (WITH_SYSTEM_RPN=TRUE)
if ((WITH_SYSTEM_RPN) OR (CACHE WITH_SYSTEM_RPN) OR (ENV{WITH_SYSTEM_RPN}))
  find_package(rmn ${rmn_REQ_VERSION} CONFIG)
  find_package(tdpack ${tdpack_REQ_VERSION} CONFIG)
  find_package(rpncomm ${rpncomm_REQ_VERSION} CONFIG)
  find_package(vgrid ${vgrid_REQ_VERSION} CONFIG)

# Use sources for RPN libraries (WITH_SYSTEM_RPN=FALSE)
else()
  if (EXISTS ${CMAKE_SOURCE_DIR}/src/rpn-si/rmn/CMakeLists.txt)
    set(rmn_SRC "rmn" CACHE STRING "rmn sources")
    set(rmn_PUBLIC_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/src/rpn-si/rmn/src/PUBLIC_INCLUDES" CACHE PATH "rmn public include directory" FORCE)
    set(rmn_INCLUDE_DIRS "${CMAKE_BINARY_DIR}/src/rmn" CACHE PATH "rmn include directory" FORCE)
    set(rmn_EXTRA_INCLUDE_DIR "${CMAKE_BINARY_DIR}/src/rmn/include" CACHE PATH "extra rmn include directory" FORCE)
    set(rmn_FOUND TRUE CACHE BOOL "Control whether rmn library was found")
    # TODO: move this declaration to "target_include_directories" in submodules
    include_directories(${rmn_PUBLIC_INCLUDE_DIR} ${rmn_INCLUDE_DIRS} ${rmn_EXTRA_INCLUDE_DIR} "${CMAKE_BINARY_DIR}/src/rmn/App/src")
    add_subdirectory(rpn-si/rmn rmn)
   else()
     message(ERROR " -- (EC) No rmn directory found!")
  endif()
  if (EXISTS ${CMAKE_SOURCE_DIR}/src/rpn-si/tdpack/CMakeLists.txt)
    add_subdirectory(rpn-si/tdpack tdpack)
    set(tdpack_SRC "tdpack" CACHE STRING "tdpack sources")
    set(tdpack_INCLUDE_DIRS "${CMAKE_BINARY_DIR}/src/tdpack" CACHE PATH "tdpack include directory" FORCE)
    set(tdpack_FOUND TRUE CACHE BOOL "Control whether tdpack was found")
  else()
    message(ERROR " -- (EC) No tdpack directory found!")
  endif()
  if (EXISTS ${CMAKE_SOURCE_DIR}/src/rpn-si/vgrid/CMakeLists.txt)
    add_subdirectory(rpn-si/vgrid vgrid)
    set(vgrid_SRC "vgrid" CACHE STRING "vgrid sources")
    set(vgrid_INCLUDE_DIRS "${CMAKE_BINARY_DIR}/src/vgrid/lib" CACHE PATH "vgrid generated include directory" FORCE)
    set(vgrid_FOUND TRUE CACHE BOOL "Control whether vgrid was found")
  else()
    message(ERROR " -- (EC) No vgrid directory found!")
  endif()
  if (EXISTS ${CMAKE_SOURCE_DIR}/src/rpn-si/rpncomm/CMakeLists.txt)
    set(rpncomm_SRC "rpncomm" CACHE STRING "rpncomm sources")
    set(rpncomm_INCLUDE_DIRS "${CMAKE_SOURCE_DIR}/src/rpn-si/rpncomm/src" CACHE PATH "rpncomm include directory" FORCE)
    set(rpncomm_GEN_INCLUDE_DIR "${CMAKE_BINARY_DIR}/src/rpncomm/src" CACHE PATH "rpncomm include directory" FORCE)
    set(rpncomm_FOUND TRUE CACHE BOOL "Control whether rpncomm library was found")
    add_subdirectory(rpn-si/rpncomm rpncomm)
  else()
    message(ERROR " -- (EC) No rpncomm directory found!")
  endif()
endif()

set(modelutils_INCLUDE_DIRS "${CMAKE_SOURCE_DIR}/src/modelutils/include" CACHE PATH "modelutils include directory" FORCE)
set(modelutils_MODULES_DIR "${CMAKE_BINARY_DIR}/src/modelutils/modelutils/modules" CACHE PATH "modelutils modules directory" FORCE)
add_subdirectory(modelutils modelutils)

if (EXISTS ${CMAKE_SOURCE_DIR}/src/rpnphy/CMakeLists.txt)
  set(phy_SRC "rpnphy" CACHE STRING "rpnphy sources")
  set(phy_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/src/rpnphy/include" CACHE PATH "rpnphy include directory" FORCE)
  set(phy_MODULES_DIR "${CMAKE_BINARY_DIR}/src/rpnphy/rpnphy/modules" CACHE PATH "rpnphy modules directory" FORCE)
  set(phy_LIBRARIES rpnphy CACHE STRING "rpnphy library")
  set(cpl_LIBRARIES rpnphy_cpl_stubs CACHE STRING "rpnphy coupling library")
  set(chm_LIBRARIES rpnphy_chm_stubs CACHE STRING "rpnphy chemistry library")
  add_subdirectory(rpnphy rpnphy)
  add_dependencies(rpnphy modelutils ${vgrid_SRC} ${rpncomm_SRC} ${rmn_SRC})
  add_dependencies(rpnphy_chm_stubs modelutils ${vgrid_SRC} ${rpncomm_SRC} ${rmn_SRC})
endif()

add_subdirectory(sps sps)

# Declare the dependencies of all the components, whether sources where used or not
if ( NOT "${vgrid_SRC}" STREQUAL "" OR NOT "${rpncomm_SRC}" STREQUAL "" OR NOT "${rmn_SRC}" STREQUAL "" OR NOT "${tdpack_SRC}" STREQUAL "")
  add_dependencies(modelutils ${vgrid_SRC} ${tdpack_SRC} ${rpncomm_SRC} ${rmn_SRC})
endif()
add_dependencies(spsdyn ${phy_SRC} modelutils ${vgrid_SRC} ${rpncomm_SRC} ${rmn_SRC})

# To be installed only with package
install(DIRECTORY ../scripts/ DESTINATION scripts USE_SOURCE_PERMISSIONS PATTERN "rpy" EXCLUDE PATTERN "support" EXCLUDE)
install(DIRECTORY ../share/configurations/ DESTINATION share/configurations USE_SOURCE_PERMISSIONS)
install(DIRECTORY ../share/misc/ DESTINATION share/misc USE_SOURCE_PERMISSIONS)
